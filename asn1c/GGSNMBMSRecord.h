/*
 * Generated by asn1c-0.9.27 (http://lionet.info/asn1c)
 * From ASN.1 module "GPRSChargingDataTypesV1171"
 * 	found in "../GPRSChargingDataTypesV1171_py_asn1c_2.asn"
 */

#ifndef	_GGSNMBMSRecord_H_
#define	_GGSNMBMSRecord_H_


#include <asn_application.h>

/* Including external dependencies */
#include "RecordType.h"
#include "GSNAddress.h"
#include "ChargingID.h"
#include "AccessPointNameNI.h"
#include "TimeStamp.h"
#include "CallDuration.h"
#include "CauseForRecClosing.h"
#include <NativeInteger.h>
#include "NodeID.h"
#include "LocalSequenceNumber.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_SET.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */

/*
 * Method of determining the components presence
 */
typedef enum GGSNMBMSRecord_PR {
	GGSNMBMSRecord_PR_recordType,	/* Member recordType is present */
	GGSNMBMSRecord_PR_ggsnAddress,	/* Member ggsnAddress is present */
	GGSNMBMSRecord_PR_chargingID,	/* Member chargingID is present */
	GGSNMBMSRecord_PR_listofDownstreamNodes,	/* Member listofDownstreamNodes is present */
	GGSNMBMSRecord_PR_accessPointNameNI,	/* Member accessPointNameNI is present */
	GGSNMBMSRecord_PR_servedPDPAddress,	/* Member servedPDPAddress is present */
	GGSNMBMSRecord_PR_listOfTrafficVolumes,	/* Member listOfTrafficVolumes is present */
	GGSNMBMSRecord_PR_recordOpeningTime,	/* Member recordOpeningTime is present */
	GGSNMBMSRecord_PR_duration,	/* Member duration is present */
	GGSNMBMSRecord_PR_causeForRecClosing,	/* Member causeForRecClosing is present */
	GGSNMBMSRecord_PR_diagnostics,	/* Member diagnostics is present */
	GGSNMBMSRecord_PR_recordSequenceNumber,	/* Member recordSequenceNumber is present */
	GGSNMBMSRecord_PR_nodeID,	/* Member nodeID is present */
	GGSNMBMSRecord_PR_recordExtensions,	/* Member recordExtensions is present */
	GGSNMBMSRecord_PR_localSequenceNumber,	/* Member localSequenceNumber is present */
	GGSNMBMSRecord_PR_mbmsInformation,	/* Member mbmsInformation is present */
} GGSNMBMSRecord_PR;

/* Forward declarations */
struct PDPAddress;
struct Diagnostics;
struct ManagementExtensions;
struct MBMSInformation;
struct IPAddress;
struct ChangeOfMBMSCondition;

/* GGSNMBMSRecord */
typedef struct GGSNMBMSRecord {
	RecordType_t	 recordType;
	GSNAddress_t	 ggsnAddress;
	ChargingID_t	 chargingID;
	struct GGSNMBMSRecord__listofDownstreamNodes {
		A_SEQUENCE_OF(struct IPAddress) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} listofDownstreamNodes;
	AccessPointNameNI_t	*accessPointNameNI	/* OPTIONAL */;
	struct PDPAddress	*servedPDPAddress	/* OPTIONAL */;
	struct GGSNMBMSRecord__listOfTrafficVolumes {
		A_SEQUENCE_OF(struct ChangeOfMBMSCondition) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *listOfTrafficVolumes;
	TimeStamp_t	 recordOpeningTime;
	CallDuration_t	 duration;
	CauseForRecClosing_t	 causeForRecClosing;
	struct Diagnostics	*diagnostics	/* OPTIONAL */;
	long	*recordSequenceNumber	/* OPTIONAL */;
	NodeID_t	*nodeID	/* OPTIONAL */;
	struct ManagementExtensions	*recordExtensions	/* OPTIONAL */;
	LocalSequenceNumber_t	*localSequenceNumber	/* OPTIONAL */;
	struct MBMSInformation	*mbmsInformation	/* OPTIONAL */;
	
	/* Presence bitmask: ASN_SET_ISPRESENT(pGGSNMBMSRecord, GGSNMBMSRecord_PR_x) */
	unsigned int _presence_map
		[((16+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} GGSNMBMSRecord_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_GGSNMBMSRecord;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "PDPAddress.h"
#include "Diagnostics.h"
#include "ManagementExtensions.h"
#include "MBMSInformation.h"
#include "GSNAddress.h"
#include "ChangeOfMBMSCondition.h"

#endif	/* _GGSNMBMSRecord_H_ */
#include <asn_internal.h>
